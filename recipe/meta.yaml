{% set name = "amep" %}
{% set version = "1.0.2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/amep-{{ version }}.tar.gz
  sha256: 53c09904dff36c88065a7039f08dfc0995aa2601ba7b3eaf9ca7e865f65211b7

build:
  noarch: python
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  number: 0

requirements:
  host:
    - python >=3.10
    - setuptools >=64
    - pip
  run:
    - python >=3.10
    - h5py >=3.7.0
    - matplotlib-base >=3.6.2
    - numba >=0.56.4
    - numpy >=1.21.6
    - scipy >=1.10.0
    - scikit-image >=0.20.0
    - tqdm >=4.65.0

test:
  imports:
    - amep
  commands:
    - pip check
  requires:
    - pip

about:
  summary: Active Matter Evaluation Package for data analysis of active matter simulations
  home: https://amepproject.de/
  dev_url: https://github.com/amepproject/amep
  doc_url: https://amepproject.de/
  license: GPL-3.0 AND BSD-3-Clause
  license_file:
    - LICENSE
    - LICENSES.third-party
  description: |
    The Active Matter Evaluation Package (AMEP) is a powerful tool for analyzing 
    simulation data of active matter systems. It provides a unified framework for 
    handling both particle-based and continuum simulation data. AMEP provides a 
    huge variety of analysis methods for both data types that allow to evaluate 
    various dynamic and static observables based on the trajectories of the particles 
    or the time evolution of continuum fields. For fast and efficient data handling, 
    AMEP provides a unified framework for loading and storing simulation data and 
    analysis results in a compressed, HDF5-based data format. AMEP is written purely 
    in Python and uses powerful libraries such as NumPy, SciPy, Matplotlib, and 
    scikit-image commonly used in computational physics. Therefore, understanding, 
    modifying, and building up on the provided framework is comparatively easy. All 
    evaluation functions are optimized to run efficiently on HPC (High Performance 
    Computing) hardware to provide fast computations. To plot and visualize simulation 
    data and analysis results, AMEP provides an optimized plotting framework based on 
    the Matplotlib Python library, which allows to easily plot and animate particles, 
    fields, and lines. Compared to other analysis libraries, the huge variety of analysis 
    methods combined with the possibility to handle both most common data types used in 
    soft-matter physics and in active-matter physics in particular, enables the 
    analysis of a much broader class of simulation data including not only classical 
    molecular-dynamics or Brownian-dynamics simulations but also any kind of numerical 
    solutions of partial differential equations.

extra:
  recipe-maintainers:
    - hechtprojects
